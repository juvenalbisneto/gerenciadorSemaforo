// Block definition (there may be more than one block per file)
FUNCTION_BLOCK semaforo

// Define input variables
VAR_INPUT
    qtdcarros1 : REAL;
    qtdcarros2 : REAL;
END_VAR

// Define output variable
VAR_OUTPUT
    ajusteSem : REAL;
END_VAR

// Fuzzify input variable 'qtdcarros'
FUZZIFY qtdcarros1
    TERM pequena := gauss 0 1;
    TERM media := gauss 1 1;
    TERM alta := gauss 2 1;
END_FUZZIFY

FUZZIFY qtdcarros2
    TERM pequena := gauss 0 1;
    TERM media := gauss 1 1;
    TERM alta := gauss 2 1;
END_FUZZIFY


// Defzzzify output variable 'ajuste'
DEFUZZIFY ajusteSem
    TERM fraco := gauss 2 2;
    TERM medio := gauss 6 2;
    TERM forte := gauss 10 2;
    // Use 'Center Of Gravity' defuzzification method
    METHOD : COG;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

    RULE 1 : IF (qtdcarros1 IS pequena) AND (qtdcarros2 IS alta)    THEN ajusteSem IS fraco;
    RULE 2 : IF (qtdcarros1 IS media)   AND (qtdcarros2 IS media)   THEN ajusteSem IS medio;
    RULE 3 : IF (qtdcarros1 IS alta)    AND (qtdcarros2 IS pequena) THEN ajusteSem IS forte;
    RULE 4 : IF (qtdcarros1 IS media)   AND (qtdcarros2 IS pequena) THEN ajusteSem IS fraco;
    RULE 5 : IF (qtdcarros1 IS media)   AND (qtdcarros2 IS alta)    THEN ajusteSem IS forte;
    RULE 6 : IF (qtdcarros1 IS alta)    AND (qtdcarros2 IS media)   THEN ajusteSem IS medio;
    RULE 7 : IF (qtdcarros1 IS pequena) AND (qtdcarros2 IS media)   THEN ajusteSem IS medio;
    RULE 8 : IF (qtdcarros1 IS pequena) AND (qtdcarros2 IS pequena) THEN ajusteSem IS fraco;
    RULE 9 : IF (qtdcarros1 IS alta)    AND (qtdcarros2 IS alta)    THEN ajusteSem IS forte;
    				
END_RULEBLOCK

END_FUNCTION_BLOCK