// Block definition (there may be more than one block per file)
FUNCTION_BLOCK semaforo

// Define input variables
VAR_INPUT
    qtd: REAL;
    qtddir : REAL;
	qtdindir : REAL;
END_VAR

// Define output variable
VAR_OUTPUT
    ajuste : REAL;
END_VAR

// Fuzzify input variable 'qtdSem'
FUZZIFY qtd
	TERM p := trian -0.99 1 2;
    TERM m := trian 1 2 3;
    TERM g := trian 2 4 6;
END_FUZZIFY

FUZZIFY qtddir
	TERM p := trian -0.99 1 2;
    TERM m := trian 1 2 3;
    TERM g := trian 2 4 6;
END_FUZZIFY

FUZZIFY qtdindir
	TERM p := trian -0.99 1 2;
    TERM m := trian 1 2 3;
    TERM g := trian 2 4 6;
END_FUZZIFY

// Defzzzify output variable 'ajuste'
DEFUZZIFY ajuste
    TERM fraco := gauss 2 2;
    TERM medio := gauss 5 2;
    TERM forte := gauss 8 2;
    // Use 'Center Of Gravity' defuzzification method
    METHOD : COG;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

    RULE 1 : IF (qtd IS p) 	AND (qtddir IS g) AND (qtdindir is p) THEN ajuste IS fraco;
    RULE 2 : IF (qtd IS g)  AND (qtddir IS p) AND (qtdindir is p) THEN ajuste IS forte;
    RULE 3 : IF (qtd IS g)  AND (qtddir IS m) AND (qtdindir is p) THEN ajuste IS forte;
    RULE 4 : IF (qtd IS m)	AND (qtddir IS g) AND (qtdindir is p) THEN ajuste IS medio;
    RULE 5 : IF (qtd IS p)  AND (qtddir IS m) AND (qtdindir is p) THEN ajuste IS fraco;
    RULE 6 : IF (qtd IS m)  AND (qtddir IS p) AND (qtdindir is p) THEN ajuste IS medio;
    RULE 7 : IF (qtd IS p) 	AND (qtddir IS p) AND (qtdindir is p) THEN ajuste IS fraco;
    RULE 8 : IF (qtd IS m) 	AND (qtddir IS m) AND (qtdindir is p) THEN ajuste IS medio;
    RULE 9 : IF (qtd IS g)  AND (qtddir IS g) AND (qtdindir is p) THEN ajuste IS forte;
	
	RULE 10 : IF (qtd IS p) 	AND (qtddir IS g) AND (qtdindir is m) THEN ajuste IS fraco;
    RULE 11 : IF (qtd IS g)  AND (qtddir IS p) AND (qtdindir is m) THEN ajuste IS forte;
    RULE 12 : IF (qtd IS g)  AND (qtddir IS m) AND (qtdindir is m) THEN ajuste IS forte;
    RULE 13 : IF (qtd IS m)	AND (qtddir IS g) AND (qtdindir is m)THEN ajuste IS medio;
    RULE 14 : IF (qtd IS p)  AND (qtddir IS m) AND (qtdindir is m)THEN ajuste IS fraco;
    RULE 15 : IF (qtd IS m)  AND (qtddir IS p) AND (qtdindir is m)THEN ajuste IS medio;
    RULE 16 : IF (qtd IS p) 	AND (qtddir IS p) AND (qtdindir is m)THEN ajuste IS fraco;
    RULE 17 : IF (qtd IS m) 	AND (qtddir IS m) AND (qtdindir is m)THEN ajuste IS medio;
    RULE 18 : IF (qtd IS g)  AND (qtddir IS g) AND (qtdindir is m) THEN ajuste IS forte;
	
	RULE 19 : IF (qtd IS p) 	AND (qtddir IS g) AND (qtdindir is g) THEN ajuste IS medio;
    RULE 20 : IF (qtd IS g)  AND (qtddir IS p)AND (qtdindir is g) THEN ajuste IS forte;
    RULE 21 : IF (qtd IS g)  AND (qtddir IS m)AND (qtdindir is g) THEN ajuste IS forte;
    RULE 22 : IF (qtd IS m)	AND (qtddir IS g)AND (qtdindir is g) THEN ajuste IS forte;
    RULE 23 : IF (qtd IS p)  AND (qtddir IS m)AND (qtdindir is g) THEN ajuste IS fraco;
    RULE 24 : IF (qtd IS m)  AND (qtddir IS p)AND (qtdindir is g) THEN ajuste IS medio;
    RULE 25 : IF (qtd IS p) 	AND (qtddir IS p)AND (qtdindir is g) THEN ajuste IS fraco;
    RULE 26 : IF (qtd IS m) 	AND (qtddir IS m)AND (qtdindir is g) THEN ajuste IS medio;
    RULE 27 : IF (qtd IS g)  AND (qtddir IS g) AND (qtdindir is g)THEN ajuste IS forte;
    				
END_RULEBLOCK

END_FUNCTION_BLOCK